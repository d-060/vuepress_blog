{"remainingRequest":"F:\\work\\vuepress_blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\work\\vuepress_blog\\node_modules\\vuepress-theme-meteorlxy\\lib\\components\\Pagination.vue?vue&type=style&index=0&id=6d09091c&lang=stylus&scoped=true&","dependencies":[{"path":"F:\\work\\vuepress_blog\\node_modules\\vuepress-theme-meteorlxy\\lib\\components\\Pagination.vue","mtime":1580188475377},{"path":"F:\\work\\vuepress_blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":1580188464195},{"path":"F:\\work\\vuepress_blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1580188474822},{"path":"F:\\work\\vuepress_blog\\node_modules\\postcss-loader\\src\\index.js","mtime":1580188470659},{"path":"F:\\work\\vuepress_blog\\node_modules\\stylus-loader\\index.js","mtime":1580188473466},{"path":"F:\\work\\vuepress_blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580188461812},{"path":"F:\\work\\vuepress_blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1580188474821}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkByZXF1aXJlICd+QHRoZW1lL3N0eWxlcy92YXJpYWJsZXMnDQoNCi5wYWdpbmF0aW9uDQogIGRpc3BsYXkgZmxleA0KICBmbGV4LXdyYXAgd3JhcA0KICBqdXN0aWZ5LWNvbnRlbnQgY2VudGVyDQogIGxpc3Qtc3R5bGUgbm9uZQ0KICBtYXJnaW4gYXV0bw0KICBwYWRkaW5nIDANCiAgYm9yZGVyLXRvcCAxcHggJGJvcmRlckNvbG9yIHNvbGlkDQogIC5wYWdlLWl0ZW0NCiAgICBwYWRkaW5nIDAuNXJlbQ0KICAgICYuZGlzYWJsZWQNCiAgICAgIHBvaW50ZXItZXZlbnRzIG5vbmUNCiAgICAmLmFjdGl2ZQ0KICAgICAgY3Vyc29yIGRlZmF1bHQNCiAgICAgIGNvbG9yICRhY2NlbnRDb2xvcg0KICAgICAgZm9udC13ZWlnaHQgYm9sZA0KICAgICY6bm90KC5hY3RpdmUpDQogICAgICBjb2xvciAkdGV4dENvbG9yDQogICAgICBjdXJzb3IgcG9pbnRlcg0K"},{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pagination.vue","sourceRoot":"../node_modules/vuepress-theme-meteorlxy/lib/components","sourcesContent":["<template>\r\n  <ul class=\"pagination\">\r\n    <!--Prev Button-->\r\n    <li\r\n      :class=\"{ disabled: onFirstPage }\"\r\n      class=\"page-item\"\r\n      @click.prevent=\"prevPage\"\r\n    >\r\n      <span>&laquo;</span>\r\n    </li>\r\n    <!--Page Buttons-->\r\n    <li\r\n      v-for=\"paginator in paginators\"\r\n      :key=\"paginator.value\"\r\n      :class=\"{ active: paginator.value === currentPage, disabled: !paginator.enable}\"\r\n      class=\"page-item\"\r\n      @click.prevent=\"setPage(paginator.value)\"\r\n    >\r\n      <span>{{ paginator.value }}</span>\r\n    </li>\r\n\r\n    <!--Next Button-->\r\n    <li\r\n      :class=\"{ disabled: onLastPage }\"\r\n      class=\"page-item\"\r\n      @click.prevent=\"nextPage\"\r\n    >\r\n      <span>&raquo;</span>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    value: {\r\n      type: Number,\r\n      default: 1,\r\n      validator: val => val > 0,\r\n    },\r\n\r\n    total: {\r\n      type: Number,\r\n      required: true,\r\n      validator: val => val > 0,\r\n    },\r\n\r\n    eachSide: {\r\n      type: Number,\r\n      default: 1,\r\n      validator: val => val >= 0,\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    firstPage () {\r\n      return 1\r\n    },\r\n\r\n    lastPage () {\r\n      return this.total\r\n    },\r\n\r\n    onFirstPage () {\r\n      return this.currentPage === this.firstPage\r\n    },\r\n\r\n    onLastPage () {\r\n      return this.currentPage === this.lastPage\r\n    },\r\n\r\n    currentPage () {\r\n      return this.value\r\n    },\r\n\r\n    paginators () {\r\n      const paginators = []\r\n      if (this.lastPage < this.eachSide * 2 + 4) {\r\n        for (let i = this.firstPage; i < this.lastPage + 1; ++i) {\r\n          paginators.push({\r\n            value: i,\r\n            enable: true,\r\n          })\r\n        }\r\n      } else {\r\n        if (this.currentPage - this.firstPage < this.eachSide + 2) {\r\n          // if currentPage near firstPage\r\n          for (let i = this.firstPage; i < Math.max(this.eachSide * 2 + 1, this.currentPage + this.eachSide + 1); ++i) {\r\n            paginators.push({\r\n              value: i,\r\n              enable: true,\r\n            })\r\n          }\r\n          paginators.push({\r\n            value: '...',\r\n            enable: false,\r\n          })\r\n          paginators.push({\r\n            value: this.lastPage,\r\n            enable: true,\r\n          })\r\n        } else if (this.lastPage - this.currentPage < this.eachSide + 2) {\r\n          // if currentPage near lastPage\r\n          paginators.push({\r\n            value: this.firstPage,\r\n            enable: true,\r\n          })\r\n          paginators.push({\r\n            value: '...',\r\n            enable: false,\r\n          })\r\n          for (let i = Math.min(this.lastPage - this.eachSide * 2 + 1, this.currentPage - this.eachSide); i < this.lastPage + 1; ++i) {\r\n            paginators.push({\r\n              value: i,\r\n              enable: true,\r\n            })\r\n          }\r\n        } else {\r\n          // if currentPage in the middle\r\n          paginators.push({\r\n            value: this.firstPage,\r\n            enable: true,\r\n          })\r\n          paginators.push({\r\n            value: '...',\r\n            enable: false,\r\n          })\r\n          for (let i = this.currentPage - this.eachSide; i < this.currentPage + this.eachSide + 1; ++i) {\r\n            paginators.push({\r\n              value: i,\r\n              enable: true,\r\n            })\r\n          }\r\n          paginators.push({\r\n            value: '...',\r\n            enable: false,\r\n          })\r\n          paginators.push({\r\n            value: this.lastPage,\r\n            enable: true,\r\n          })\r\n        }\r\n      }\r\n      return paginators\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    nextPage () {\r\n      this.setPage(this.currentPage + 1)\r\n    },\r\n\r\n    prevPage () {\r\n      this.setPage(this.currentPage - 1)\r\n    },\r\n\r\n    setPage (targetPage) {\r\n      if (targetPage <= this.lastPage && targetPage >= this.firstPage) {\r\n        this.$emit('input', targetPage)\r\n\r\n        // update zooming after page navigation\r\n        this.$nextTick(() => {\r\n          this.$vuepress.zooming.updateDelay()\r\n        })\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n@require '~@theme/styles/variables'\r\n\r\n.pagination\r\n  display flex\r\n  flex-wrap wrap\r\n  justify-content center\r\n  list-style none\r\n  margin auto\r\n  padding 0\r\n  border-top 1px $borderColor solid\r\n  .page-item\r\n    padding 0.5rem\r\n    &.disabled\r\n      pointer-events none\r\n    &.active\r\n      cursor default\r\n      color $accentColor\r\n      font-weight bold\r\n    &:not(.active)\r\n      color $textColor\r\n      cursor pointer\r\n</style>\r\n"]}]}