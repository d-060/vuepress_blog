{"remainingRequest":"F:\\work\\vuepress_blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\work\\vuepress_blog\\node_modules\\vuepress-theme-meteorlxy\\lib\\components\\TheHeader.vue?vue&type=style&index=0&id=37748d8c&lang=stylus&scoped=true&","dependencies":[{"path":"F:\\work\\vuepress_blog\\node_modules\\vuepress-theme-meteorlxy\\lib\\components\\TheHeader.vue","mtime":1580188475386},{"path":"F:\\work\\vuepress_blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":1580188464195},{"path":"F:\\work\\vuepress_blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1580188474822},{"path":"F:\\work\\vuepress_blog\\node_modules\\postcss-loader\\src\\index.js","mtime":1580188470659},{"path":"F:\\work\\vuepress_blog\\node_modules\\stylus-loader\\index.js","mtime":1580188473466},{"path":"F:\\work\\vuepress_blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580188461812},{"path":"F:\\work\\vuepress_blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1580188474821}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkByZXF1aXJlICd+QHRoZW1lL3N0eWxlcy92YXJpYWJsZXMnDQoNCi5oZWFkZXINCiAgYmFja2dyb3VuZC1jb2xvciAkaGVhZGVyQ29sb3INCiAgdHJhbnNpdGlvbiBhbGwgMC41cyBlYXNlLWluLW91dA0K"},{"version":3,"sources":["TheHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;;AAEA;AACA;AACA","file":"TheHeader.vue","sourceRoot":"../node_modules/vuepress-theme-meteorlxy/lib/components","sourcesContent":["<template>\r\n  <header\r\n    class=\"header\"\r\n    :style=\"style\"\r\n  >\r\n    <TheHeaderNavbar />\r\n\r\n    <TransitionFadeSlide>\r\n      <TheHeaderBanner :key=\"$route.path\">\r\n        <slot>\r\n          <h1 v-if=\"showTitle\">\r\n            {{ $page.frontmatter.title || $page.title || $site.title || '' }}\r\n          </h1>\r\n        </slot>\r\n      </TheHeaderBanner>\r\n    </TransitionFadeSlide>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nimport TransitionFadeSlide from './TransitionFadeSlide.vue'\r\nimport TheHeaderNavbar from './TheHeaderNavbar.vue'\r\nimport TheHeaderBanner from './TheHeaderBanner.vue'\r\nimport GeoPattern from 'geopattern'\r\n\r\nconst generators = [\r\n  'octogons',\r\n  'overlappingCircles',\r\n  'plusSigns',\r\n  'xes',\r\n  // 'sineWaves',\r\n  'hexagons',\r\n  'overlappingRings',\r\n  // 'plaid',\r\n  'triangles',\r\n  // 'squares',\r\n  'concentricCircles',\r\n  'diamonds',\r\n  'tessellation',\r\n  // 'nestedSquares',\r\n  'mosaicSquares',\r\n  'chevrons',\r\n]\r\n\r\nexport default {\r\n  name: 'TheHeader',\r\n\r\n  components: {\r\n    TransitionFadeSlide,\r\n    TheHeaderNavbar,\r\n    TheHeaderBanner,\r\n  },\r\n\r\n  computed: {\r\n    showTitle () {\r\n      return this.$frontmatter['header-title'] !== false && this.$themeConfig.header.showTitle !== false\r\n    },\r\n\r\n    backgroundConfig () {\r\n      return this.$themeConfig.header.background || {}\r\n    },\r\n\r\n    backgroundImg () {\r\n      // frontmatter > themeConfig\r\n      return this.$frontmatter['header-image'] || this.backgroundConfig.url || null\r\n    },\r\n\r\n    style () {\r\n      // use image\r\n      if (this.backgroundImg) {\r\n        let url = this.backgroundImg\r\n\r\n        // randomly select an image if an array is provided\r\n        if (Array.isArray(url)) {\r\n          url = this.randomArr(url)\r\n        }\r\n\r\n        return {\r\n          'background-size': 'cover',\r\n          'background-repeat': 'no-repeat',\r\n          'background-position': 'center',\r\n          'background-attachment': 'scroll',\r\n          'background-image': `url(${url})`,\r\n        }\r\n      }\r\n\r\n      // use geopattern\r\n      // avoid prerendering the geopattern in build stage or the html files will be 14KB larger\r\n      if (!this.$ssrContext && this.backgroundConfig.useGeo !== false) {\r\n        return {\r\n          'background-image': this.gpImg(),\r\n        }\r\n      }\r\n\r\n      return {}\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    gpImg () {\r\n      return GeoPattern.generate(this.gpString(), {\r\n        generator: this.randomArr(generators),\r\n      }).toDataUrl()\r\n    },\r\n\r\n    gpString () {\r\n      return ((this.$page && this.$page.title) || '') + (new Date()).toString()\r\n    },\r\n\r\n    randomArr (arr) {\r\n      return arr[Math.floor(Math.random() * arr.length)]\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n@require '~@theme/styles/variables'\r\n\r\n.header\r\n  background-color $headerColor\r\n  transition all 0.5s ease-in-out\r\n</style>\r\n"]}]}